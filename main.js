!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=document.querySelector(".profile"),s=(document.querySelector(".profile__title"),document.querySelector(".profile__subtitle"),document.querySelector(".modal__input_type_name")),r=document.querySelector(".modal__input_type_about"),n=(document.querySelector(".modal__input_type_avatar"),document.querySelector(".profile__edit-button")),i=document.querySelector(".profile__add-button"),o=(document.querySelector(".modal__close-button"),document.querySelector(".profile__avatar-edit"));document.querySelector("#card-template"),document.querySelector("#add-card-form");var a=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleInputError(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this.inputElements)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._toggleInputError(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}};class l{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}addNewItem(e){this._container.append(e)}}class d{constructor(e){var t,s,r;t=this,r=e=>{"Escape"===e.key&&this.closeModal()},(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(s="_handleCloseOnEscape"))in t?Object.defineProperty(t,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[s]=r,this._popupElement=document.querySelector(e),this._closeButtonElement=this._popupElement.querySelector(".modal__close-button")}openModal(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleCloseOnEscape)}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleCloseOnEscape)}_handleCloseOnClick(e){e.target===this._popupElement&&this.closeModal()}setEventListeners(){this._closeButtonElement.addEventListener("click",(()=>this.closeModal())),this._popupElement.addEventListener("mousedown",(e=>this._handleCloseOnClick(e)))}}class u extends d{constructor(e,t){super(e),this._handleFormSubmit=t,this._modalForm=this._popupElement.querySelector(".modal__form"),this._inputList=Array.from(this._modalForm.querySelectorAll(".modal__input")),this._submitButton=this._modalForm.querySelector(".modal__save-button"),this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}closeModal(){this._modalForm.reset(),super.closeModal()}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this.renderLoading(!0);const t=this._getInputValues();this._handleFormSubmit(t)}))}}const c=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.url=t,this.headers=s}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserData()])}getUserData(){return fetch(`${this.url}/users/me`,{headers:this.headers}).then(this._handleServerResponse)}getInitialCards(){return fetch(`${this.url}/cards`,{headers:this.headers}).then(this._handleServerResponse)}addNewCard(e){let{title:t,link:s}=e;return fetch(`${this.url}/cards`,{headers:this.headers,method:"POST",body:JSON.stringify({name:t,link:s})}).then(this._handleServerResponse)}deleteCard(e){return fetch(`${this.url}/cards/${e}`,{headers:this.headers,method:"DELETE"}).then(this._handleServerResponse)}toggleLikeStatus(e,t){return fetch(`${this.url}/cards/likes/${e}`,{headers:this.headers,method:t?"PUT":"DELETE"}).then(this._handleServerResponse)}submitUserEdit(e){return fetch(`${this.url}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleServerResponse)}setAvatar(e){let{avatar:t}=e;return fetch(`${this.url}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})}).then(this._handleServerResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"fa002eaa-cfdc-49b2-ba7a-7640eb468742","Content-Type":"application/json"}});let h=null,_=null;const m=new class{constructor(e,t,s){this._userNameElement=document.querySelector(e),this._userAboutElement=document.querySelector(t),this._userAvatarElement=document.querySelector(s)}getUserInfo(){return{name:this._userNameElement.textContent,about:this._userAboutElement.textContent,avatar:this._userAvatarElement.src}}setUserInfo(e){let{userName:t,userAbout:s}=e;this._userNameElement.textContent=t,this._userAboutElement.textContent=s}setAvatar(e){this._userAvatarElement.src=e}}(".profile__title",".profile__subtitle",".profile__image"),p=(e,s)=>{const r=new class{constructor(e,t){let{data:s,userId:r,handleImageClick:n,handleLikeClick:i,handleDeleteClick:o}=e;var a,l,d;a=this,d=()=>this._id,(l=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(l="getCardId"))in a?Object.defineProperty(a,l,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[l]=d,this._data=s,this._title=s.name,this._link=s.link,this._id=s._id,this._userId=r,this._ownerId=s.owner._id,this._likes=s.likes,this._cardSelector=t,this._handleImageClick=n,this._handleLikeClick=i,this._handleDeleteClick=o}_getTemplate(){return document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._captionElement=this._element.querySelector(".card__caption"),this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardDeleteButton=this._element.querySelector(".card__delete-icon"),this._cardImage=this._element.querySelector(".card__image"),this._cardLikesCounter=this._element.querySelector(".card__like-counter"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._title,this._captionElement.textContent=this._title,this._renderLikes(),this._userId!==this._ownerId&&this._cardDeleteButton.remove(),this._element}handleDeleteCard(){this._element.remove(),this._element.null}setLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){this._cardLikesCounter.textContent=this._likes.length||"",this.isLiked()?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>this._handleLikeClick())),this._cardDeleteButton.addEventListener("click",(()=>this._handleDeleteClick())),this._cardImage.addEventListener("click",(()=>this._handleImageClick({title:this._title,link:this._link})))}}({data:e,userId:s,handleImageClick:e=>{f.openModal(e)},handleDeleteClick:()=>{const e=r.getCardId();g.openModal(),g.setSubmitAction((()=>{g.renderLoading(!0),c.deleteCard(e).then((()=>{r.handleDeleteCard(),g.closeModal()})).catch((e=>console.log(e))).finally((()=>{g.renderLoading(!1)}))}))},handleLikeClick:()=>{c.toggleLikeStatus(r.getCardId(),!r.isLiked()).then((e=>r.setLikes(e.likes))).catch((e=>console.log(e)))}},".card-template",t.id);return r.getView()};c.getAppInfo().then((e=>{let[t,s]=e;m.setUserInfo({userName:s.name,userAbout:s.about});const r=s.avatar;m.setAvatar(r),h=s._id,_=new l({items:t,renderer:e=>{const t=p(e,h);_.addNewItem(t)}},".cards__list"),_.renderItems()})).catch((e=>console.log(e)));const v=new u("#add-card-modal",(e=>{v.renderLoading(!0),c.addNewCard(e).then((e=>{const t=p(e,e.owner._id);_.addItem(t),v.closeModal()})).catch((e=>console.log(e))).finally((()=>{v.renderLoading(!1)}))})),b=new u("#avatar-modal",(e=>{b.renderLoading(!0),c.setAvatar(e).then((e=>{m.setAvatar(e.avatar),b.closeModal()})).catch((e=>console.log(e))).finally((()=>b.renderLoading(!1)))})),E=new u("#edit-profile-modal",(e=>{const t={name:e.name,about:e.about,avatar:e.avatar};c.submitUserEdit(t).then((e=>{m.setUserInfo({userName:e.name,userAbout:e.about}),E.closeModal()})).catch((e=>console.log(e))).finally((()=>{E.renderLoading(!1)}))})),g=new class extends d{constructor(e){super(e),this._form=this._popupElement.querySelector(".modal__form"),this._submitButton=this._form.querySelector(".modal__save-button"),this._submitButtonText=this._submitButton.textContent}setSubmitAction(e){this._handleSubmitCallback=e}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Deleting...";this._submitButton.textContent=e?t:this._submitButtonText}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitCallback()}))}}("#delete-modal");g.setEventListeners();const f=new class extends d{constructor(e){super(e),this._cardImage=this._popupElement.querySelector(".modal__image"),this._cardCaption=this._popupElement.querySelector(".modal__caption")}openModal(e){let{title:t,link:s}=e;this._cardImage.src=s,this._cardImage.alt=t,this._cardCaption.textContent=t,super.openModal()}}("#image-modal");E.setEventListeners(),v.setEventListeners(),f.setEventListeners(),g.setEventListeners(),b.setEventListeners(),n.addEventListener("click",(()=>{!function(){const{name:e,about:t}=m.getUserInfo();s.value=e,r.value=t}(),E.openModal()})),i.addEventListener("click",(()=>{v.openModal(),S.resetValidation()})),o.addEventListener("click",(()=>{b.openModal(),L.resetValidation()}));const S=new a(e,document.querySelector("#add-card-form")),y=new a(e,document.querySelector("#edit-profile-form")),L=new a(e,document.querySelector("#avatar-form"));y.enableValidation(),S.enableValidation(),L.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WUFDYmlJLEVBQWlCckosaUJBQWlCLElBR3BDdkMsRUFBV21DLGlCQUFpQixTQUFTLEtBQ25DaUosRUFBWXpILFlBQ1prSSxFQUFnQnRKLGlCQUFpQixJQUduQyxNQUFNcUosRUFBbUIsSUFBSUUsRUFDM0IzTSxFQUNBTyxTQUFTQyxjQUFjLG1CQUVuQm9NLEVBQW9CLElBQUlELEVBQzVCM00sRUFDQU8sU0FBU0MsY0FBYyx1QkFFbkJrTSxFQUFrQixJQUFJQyxFQUMxQjNNLEVBQ0FPLFNBQVNDLGNBQWMsaUJBR3pCb00sRUFBa0IxSixtQkFDbEJ1SixFQUFpQnZKLG1CQUNqQndKLEVBQWdCeEosa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybVN1Ym1pdC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX3NhdmUtYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fc2F2ZS1idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl92aXNpYmxlXCIsXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgc2VsZWN0b3JzID0ge1xyXG4gIGNhcmRTZWN0aW9uOiBcIi5jYXJkc19fbGlzdFwiLFxyXG4gIGNhcmRUZW1wbGF0ZTogXCIuY2FyZC10ZW1wbGF0ZVwiLFxyXG4gIHByZXZpZXdQb3B1cDogXCIjaW1hZ2UtbW9kYWxcIixcclxuICBlZGl0UHJvZmlsZU1vZGFsOiBcIiNlZGl0LXByb2ZpbGUtbW9kYWxcIixcclxuICBlZGl0UHJvZmlsZUZvcm06IFwiI2VkaXQtcHJvZmlsZS1mb3JtXCIsXHJcbiAgYWRkQ2FyZE1vZGFsOiBcIiNhZGQtY2FyZC1tb2RhbFwiLFxyXG4gIHVzZXJOYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3RpdGxlXCIsXHJcbiAgdXNlckFib3V0U2VsZWN0b3I6IFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIsXHJcbiAgdXNlckF2YXRhclNlbGVjdG9yOiBcIi5wcm9maWxlX19pbWFnZVwiLFxyXG4gIHVzZXJBdmF0YXJNb2RhbDogXCIjYXZhdGFyLW1vZGFsXCIsXHJcbiAgaW1hZ2VNb2RhbDogXCIjaW1hZ2UtbW9kYWxcIixcclxuICBkZWxldGVNb2RhbDogXCIjZGVsZXRlLW1vZGFsXCIsXHJcbiAgYXZhdGFyRm9ybTogXCIjYXZhdGFyLWZvcm1cIixcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3RpdGxlXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19zdWJ0aXRsZVwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lSW5wdXRWYWx1ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIubW9kYWxfX2lucHV0X3R5cGVfbmFtZVwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQWJvdXRJbnB1dFZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5tb2RhbF9faW5wdXRfdHlwZV9hYm91dFwiXHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgYXZhdGFySW5wdXRWYWx1ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIubW9kYWxfX2lucHV0X3R5cGVfYXZhdGFyXCJcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBlZGl0UHJvZmlsZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgYWRkQ2FyZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuZXhwb3J0IGNvbnN0IGNsb3NlTW9kYWxCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZS1idXR0b25cIik7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXItZWRpdFwiKTtcclxuXHJcbmV4cG9ydCBjb25zdCBhZGRDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtdGVtcGxhdGVcIik7XHJcbmV4cG9ydCBjb25zdCBhZGRDYXJkRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtZm9ybVwiKTtcclxuIiwiaW1wb3J0IHsgY29uZmlnIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWxlbWVudCkge1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGNvbmZpZy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBjb25maWcuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IGNvbmZpZy5lcnJvckNsYXNzO1xyXG5cclxuICAgIHRoaXMuX2Zvcm0gPSBmb3JtRWxlbWVudDtcclxuICAgIHRoaXMuX2lucHV0RWxlbWVudHMgPSBBcnJheS5mcm9tKFxyXG4gICAgICB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcilcclxuICAgICk7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfdG9nZ2xlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcclxuICAgIHJldHVybiAhdGhpcy5faW5wdXRFbGVtZW50cy5ldmVyeShcclxuICAgICAgKGlucHV0RWxlbWVudCkgPT4gaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCh0aGlzLmlucHV0RWxlbWVudHMpKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIChldnQpID0+IHtcclxuICAgICAgICB0aGlzLl90b2dnbGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cclxuICAgIHRoaXMuX2lucHV0RWxlbWVudHMuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKHRoaXMuX3JlbmRlcmVyKTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICBhZGROZXdJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoZWxlbWVudCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fY2xvc2VCdXR0b25FbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLm1vZGFsX19jbG9zZS1idXR0b25cIlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIG9wZW5Nb2RhbCgpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlQ2xvc2VPbkVzY2FwZSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZU1vZGFsKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVDbG9zZU9uRXNjYXBlKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVDbG9zZU9uRXNjYXBlID0gKGV2dCkgPT4ge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZU1vZGFsKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgX2hhbmRsZUNsb3NlT25DbGljayhldnQpIHtcclxuICAgIGlmIChldnQudGFyZ2V0ID09PSB0aGlzLl9wb3B1cEVsZW1lbnQpIHtcclxuICAgICAgdGhpcy5jbG9zZU1vZGFsKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2Nsb3NlQnV0dG9uRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5jbG9zZU1vZGFsKCkpO1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGV2dCkgPT5cclxuICAgICAgdGhpcy5faGFuZGxlQ2xvc2VPbkNsaWNrKGV2dClcclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fbW9kYWxGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICB0aGlzLl9tb2RhbEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIilcclxuICAgICk7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9tb2RhbEZvcm0ucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fc2F2ZS1idXR0b25cIik7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25UZXh0ID0gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgZm9ybURhdGEgPSB7fTtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBmb3JtRGF0YVtpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gZm9ybURhdGE7XHJcbiAgfVxyXG5cclxuICBjbG9zZU1vZGFsKCkge1xyXG4gICAgdGhpcy5fbW9kYWxGb3JtLnJlc2V0KCk7XHJcbiAgICBzdXBlci5jbG9zZU1vZGFsKCk7XHJcbiAgfVxyXG5cclxuICByZW5kZXJMb2FkaW5nKGlzTG9hZGluZywgbG9hZGluZ1RleHQgPSBcIlNhdmluZy4uLlwiKSB7XHJcbiAgICBpZiAoaXNMb2FkaW5nKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IGxvYWRpbmdUZXh0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fc3VibWl0QnV0dG9uVGV4dDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX21vZGFsRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuXHJcbiAgICAgIGNvbnN0IGlucHV0VmFsdWVzID0gdGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdChpbnB1dFZhbHVlcyk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm1TdWJtaXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybVN1Ym1pdC5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcclxuXHJcbmltcG9ydCB7XHJcbiAgY29uZmlnLFxyXG4gIHNlbGVjdG9ycyxcclxuICBwcm9maWxlLFxyXG4gIHByb2ZpbGVOYW1lSW5wdXRWYWx1ZSxcclxuICBwcm9maWxlQWJvdXRJbnB1dFZhbHVlLFxyXG4gIGFkZENhcmRCdXR0b24sXHJcbiAgZWRpdFByb2ZpbGVCdXR0b24sXHJcbiAgYXZhdGFySWNvbixcclxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcblxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTJcIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcImZhMDAyZWFhLWNmZGMtNDliMi1iYTdhLTc2NDBlYjQ2ODc0MlwiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufSk7XHJcblxyXG5sZXQgdXNlcklkID0gbnVsbDtcclxubGV0IGNhcmRTZWN0aW9uID0gbnVsbDtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFxyXG4gIHNlbGVjdG9ycy51c2VyTmFtZVNlbGVjdG9yLFxyXG4gIHNlbGVjdG9ycy51c2VyQWJvdXRTZWxlY3RvcixcclxuICBzZWxlY3RvcnMudXNlckF2YXRhclNlbGVjdG9yXHJcbik7XHJcblxyXG5jb25zdCBjcmVhdGVDYXJkID0gKGRhdGEsIHVzZXJJZCkgPT4ge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgIHtcclxuICAgICAgZGF0YTogZGF0YSxcclxuICAgICAgdXNlcklkOiB1c2VySWQsXHJcbiAgICAgIGhhbmRsZUltYWdlQ2xpY2s6IChpbWdEYXRhKSA9PiB7XHJcbiAgICAgICAgY2FyZFByZXZpZXdQb3B1cC5vcGVuTW9kYWwoaW1nRGF0YSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGhhbmRsZURlbGV0ZUNsaWNrOiAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgaWQgPSBjYXJkLmdldENhcmRJZCgpO1xyXG4gICAgICAgIGRlbGV0ZVBvcHVwLm9wZW5Nb2RhbCgpO1xyXG4gICAgICAgIGRlbGV0ZVBvcHVwLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICAgICAgICBkZWxldGVQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gICAgICAgICAgYXBpXHJcbiAgICAgICAgICAgIC5kZWxldGVDYXJkKGlkKVxyXG4gICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgY2FyZC5oYW5kbGVEZWxldGVDYXJkKCk7XHJcbiAgICAgICAgICAgICAgZGVsZXRlUG9wdXAuY2xvc2VNb2RhbCgpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICAgICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGRlbGV0ZVBvcHVwLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSxcclxuICAgICAgaGFuZGxlTGlrZUNsaWNrOiAoKSA9PiB7XHJcbiAgICAgICAgYXBpXHJcbiAgICAgICAgICAudG9nZ2xlTGlrZVN0YXR1cyhjYXJkLmdldENhcmRJZCgpLCAhY2FyZC5pc0xpa2VkKCkpXHJcbiAgICAgICAgICAudGhlbigocmVzKSA9PiBjYXJkLnNldExpa2VzKHJlcy5saWtlcykpXHJcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgc2VsZWN0b3JzLmNhcmRUZW1wbGF0ZSxcclxuICAgIHByb2ZpbGUuaWRcclxuICApO1xyXG4gIHJldHVybiBjYXJkLmdldFZpZXcoKTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIGZpbGxQcm9maWxlRm9ybSgpIHtcclxuICBjb25zdCB7IG5hbWUsIGFib3V0IH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIHByb2ZpbGVOYW1lSW5wdXRWYWx1ZS52YWx1ZSA9IG5hbWU7XHJcbiAgcHJvZmlsZUFib3V0SW5wdXRWYWx1ZS52YWx1ZSA9IGFib3V0O1xyXG59XHJcblxyXG5hcGlcclxuICAuZ2V0QXBwSW5mbygpXHJcbiAgLnRoZW4oKFtjYXJkc0FycmF5LCB1c2VyRGF0YV0pID0+IHtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcclxuICAgICAgdXNlck5hbWU6IHVzZXJEYXRhLm5hbWUsXHJcbiAgICAgIHVzZXJBYm91dDogdXNlckRhdGEuYWJvdXQsXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCB1c2VyQXZhdGFyID0gdXNlckRhdGEuYXZhdGFyO1xyXG4gICAgdXNlckluZm8uc2V0QXZhdGFyKHVzZXJBdmF0YXIpO1xyXG5cclxuICAgIHVzZXJJZCA9IHVzZXJEYXRhLl9pZDtcclxuICAgIGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAgICAgIHtcclxuICAgICAgICBpdGVtczogY2FyZHNBcnJheSxcclxuICAgICAgICByZW5kZXJlcjogKGRhdGEpID0+IHtcclxuICAgICAgICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKGRhdGEsIHVzZXJJZCk7XHJcbiAgICAgICAgICBjYXJkU2VjdGlvbi5hZGROZXdJdGVtKGNhcmQpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIHNlbGVjdG9ycy5jYXJkU2VjdGlvblxyXG4gICAgKTtcclxuICAgIGNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcblxyXG5jb25zdCBhZGRDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShzZWxlY3RvcnMuYWRkQ2FyZE1vZGFsLCAoZGF0YSkgPT4ge1xyXG4gIGFkZENhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gIGFwaVxyXG4gICAgLmFkZE5ld0NhcmQoZGF0YSlcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKGRhdGEsIGRhdGEub3duZXIuX2lkKTtcclxuICAgICAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkKTtcclxuICAgICAgYWRkQ2FyZFBvcHVwLmNsb3NlTW9kYWwoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgYWRkQ2FyZFBvcHVwLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuY29uc3QgYXZhdGFyTW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybShzZWxlY3RvcnMudXNlckF2YXRhck1vZGFsLCAoYXZhdGFyKSA9PiB7XHJcbiAgYXZhdGFyTW9kYWwucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICBhcGlcclxuICAgIC5zZXRBdmF0YXIoYXZhdGFyKVxyXG4gICAgLnRoZW4oKHVzZXIpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0QXZhdGFyKHVzZXIuYXZhdGFyKTtcclxuICAgICAgYXZhdGFyTW9kYWwuY2xvc2VNb2RhbCgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxyXG4gICAgLmZpbmFsbHkoKCkgPT4gYXZhdGFyTW9kYWwucmVuZGVyTG9hZGluZyhmYWxzZSkpO1xyXG59KTtcclxuXHJcbmNvbnN0IGVkaXRQcm9maWxlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBzZWxlY3RvcnMuZWRpdFByb2ZpbGVNb2RhbCxcclxuICAoZGF0YSkgPT4ge1xyXG4gICAgY29uc3QgdXBkYXRlVXNlciA9IHtcclxuICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICBhYm91dDogZGF0YS5hYm91dCxcclxuICAgICAgYXZhdGFyOiBkYXRhLmF2YXRhcixcclxuICAgIH07XHJcbiAgICBhcGlcclxuICAgICAgLnN1Ym1pdFVzZXJFZGl0KHVwZGF0ZVVzZXIpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7IHVzZXJOYW1lOiByZXMubmFtZSwgdXNlckFib3V0OiByZXMuYWJvdXQgfSk7XHJcbiAgICAgICAgZWRpdFByb2ZpbGVQb3B1cC5jbG9zZU1vZGFsKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgZWRpdFByb2ZpbGVQb3B1cC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG4pO1xyXG5cclxuY29uc3QgZGVsZXRlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybVN1Ym1pdChzZWxlY3RvcnMuZGVsZXRlTW9kYWwpO1xyXG5kZWxldGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgY2FyZFByZXZpZXdQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShzZWxlY3RvcnMuaW1hZ2VNb2RhbCk7XHJcblxyXG5lZGl0UHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbmFkZENhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5jYXJkUHJldmlld1BvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbmRlbGV0ZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbmF2YXRhck1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5lZGl0UHJvZmlsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGZpbGxQcm9maWxlRm9ybSgpO1xyXG4gIGVkaXRQcm9maWxlUG9wdXAub3Blbk1vZGFsKCk7XHJcbn0pO1xyXG5cclxuYWRkQ2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGFkZENhcmRQb3B1cC5vcGVuTW9kYWwoKTtcclxuICBhZGRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG59KTtcclxuXHJcbmF2YXRhckljb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBhdmF0YXJNb2RhbC5vcGVuTW9kYWwoKTtcclxuICBhdmF0YXJWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5cclxuY29uc3QgYWRkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxyXG4gIGNvbmZpZyxcclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZC1jYXJkLWZvcm1cIilcclxuKTtcclxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICBjb25maWcsXHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LXByb2ZpbGUtZm9ybVwiKVxyXG4pO1xyXG5jb25zdCBhdmF0YXJWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICBjb25maWcsXHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItZm9ybVwiKVxyXG4pO1xyXG5cclxuZWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5hZGRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuYXZhdGFyVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xyXG4gICAgdGhpcy51cmwgPSBiYXNlVXJsO1xyXG4gICAgdGhpcy5oZWFkZXJzID0gaGVhZGVycztcclxuICB9XHJcblxyXG4gIF9oYW5kbGVTZXJ2ZXJSZXNwb25zZShyZXMpIHtcclxuICAgIGlmIChyZXMub2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcblxyXG4gIGdldEFwcEluZm8oKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0SW5pdGlhbENhcmRzKCksIHRoaXMuZ2V0VXNlckRhdGEoKV0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckRhdGEoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlU2VydmVyUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgYWRkTmV3Q2FyZCh7IHRpdGxlLCBsaW5rIH0pIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lOiB0aXRsZSwgbGluayB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlU2VydmVyUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZChpZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS9jYXJkcy8ke2lkfWAsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZUxpa2VTdGF0dXMoaWQsIGlzTGlrZWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vY2FyZHMvbGlrZXMvJHtpZH1gLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgbWV0aG9kOiBpc0xpa2VkID8gXCJQVVRcIiA6IFwiREVMRVRFXCIsXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHN1Ym1pdFVzZXJFZGl0KGRhdGEpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IGRhdGEuYWJvdXQsXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVTZXJ2ZXJSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBzZXRBdmF0YXIoeyBhdmF0YXIgfSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBhdmF0YXIsXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVTZXJ2ZXJSZXNwb25zZSk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih1c2VyTmFtZVNlbGVjdG9yLCB1c2VyQWJvdXRTZWxlY3RvciwgdXNlckF2YXRhclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl91c2VyTmFtZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJOYW1lU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fdXNlckFib3V0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlckFib3V0U2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fdXNlckF2YXRhckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBdmF0YXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX3VzZXJOYW1lRWxlbWVudC50ZXh0Q29udGVudCxcclxuICAgICAgYWJvdXQ6IHRoaXMuX3VzZXJBYm91dEVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgIGF2YXRhcjogdGhpcy5fdXNlckF2YXRhckVsZW1lbnQuc3JjLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKHsgdXNlck5hbWUsIHVzZXJBYm91dCB9KSB7XHJcbiAgICB0aGlzLl91c2VyTmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSB1c2VyTmFtZTtcclxuICAgIHRoaXMuX3VzZXJBYm91dEVsZW1lbnQudGV4dENvbnRlbnQgPSB1c2VyQWJvdXQ7XHJcbiAgfVxyXG5cclxuICBzZXRBdmF0YXIodXNlckF2YXRhcikge1xyXG4gICAgdGhpcy5fdXNlckF2YXRhckVsZW1lbnQuc3JjID0gdXNlckF2YXRhcjtcclxuICB9XHJcbn1cclxuIiwiY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICB7IGRhdGEsIHVzZXJJZCwgaGFuZGxlSW1hZ2VDbGljaywgaGFuZGxlTGlrZUNsaWNrLCBoYW5kbGVEZWxldGVDbGljayB9LFxyXG4gICAgY2FyZFNlbGVjdG9yXHJcbiAgKSB7XHJcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcclxuICAgIHRoaXMuX3RpdGxlID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgIHRoaXMuX2lkID0gZGF0YS5faWQ7XHJcbiAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7XHJcbiAgICB0aGlzLl9vd25lcklkID0gZGF0YS5vd25lci5faWQ7XHJcbiAgICB0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrID0gaGFuZGxlRGVsZXRlQ2xpY2s7XHJcbiAgfVxyXG5cclxuICBnZXRDYXJkSWQgPSAoKSA9PiB0aGlzLl9pZDtcclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgcmV0dXJuIGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtdGVtcGxhdGVcIilcclxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXRWaWV3KCkge1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcblxyXG4gICAgdGhpcy5fY2FwdGlvbkVsZW1lbnQgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fY2FwdGlvblwiKTtcclxuICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fY2FyZERlbGV0ZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtaWNvblwiKTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgIHRoaXMuX2NhcmRMaWtlc0NvdW50ZXIgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1jb3VudGVyXCIpO1xyXG5cclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IHRoaXMuX2xpbms7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fdGl0bGU7XHJcbiAgICB0aGlzLl9jYXB0aW9uRWxlbWVudC50ZXh0Q29udGVudCA9IHRoaXMuX3RpdGxlO1xyXG5cclxuICAgIHRoaXMuX3JlbmRlckxpa2VzKCk7XHJcblxyXG4gICAgaWYgKHRoaXMuX3VzZXJJZCAhPT0gdGhpcy5fb3duZXJJZCkge1xyXG4gICAgICB0aGlzLl9jYXJkRGVsZXRlQnV0dG9uLnJlbW92ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlRGVsZXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB0aGlzLl9lbGVtZW50Lm51bGw7XHJcbiAgfVxyXG5cclxuICBzZXRMaWtlcyhsaWtlcykge1xyXG4gICAgdGhpcy5fbGlrZXMgPSBsaWtlcztcclxuICAgIHRoaXMuX3JlbmRlckxpa2VzKCk7XHJcbiAgfVxyXG5cclxuICBpc0xpa2VkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2xpa2VzLnNvbWUoKGxpa2UpID0+IGxpa2UuX2lkID09PSB0aGlzLl91c2VySWQpO1xyXG4gIH1cclxuXHJcbiAgX3JlbmRlckxpa2VzKCkge1xyXG4gICAgdGhpcy5fY2FyZExpa2VzQ291bnRlci50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aCB8fCBcIlwiO1xyXG4gICAgaWYgKHRoaXMuaXNMaWtlZCgpKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fY2FyZExpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XHJcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljaygpXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2NhcmREZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XHJcbiAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrKClcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxyXG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHsgdGl0bGU6IHRoaXMuX3RpdGxlLCBsaW5rOiB0aGlzLl9saW5rIH0pXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZDtcclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtU3VibWl0IGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zYXZlLWJ1dHRvblwiKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblRleHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XHJcbiAgfVxyXG4gIHNldFN1Ym1pdEFjdGlvbihhY3Rpb24pIHtcclxuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdENhbGxiYWNrID0gYWN0aW9uO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcsIGxvYWRpbmdUZXh0ID0gXCJEZWxldGluZy4uLlwiKSB7XHJcbiAgICBpZiAoaXNMb2FkaW5nKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IGxvYWRpbmdUZXh0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fc3VibWl0QnV0dG9uVGV4dDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdENhbGxiYWNrKCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcclxuICAgIHRoaXMuX2NhcmRDYXB0aW9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XHJcbiAgfVxyXG5cclxuICBvcGVuTW9kYWwoeyB0aXRsZSwgbGluayB9KSB7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aXRsZTtcclxuICAgIHRoaXMuX2NhcmRDYXB0aW9uLnRleHRDb250ZW50ID0gdGl0bGU7XHJcblxyXG4gICAgc3VwZXIub3Blbk1vZGFsKCk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJjb25maWciLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsInByb2ZpbGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwcm9maWxlTmFtZUlucHV0VmFsdWUiLCJwcm9maWxlQWJvdXRJbnB1dFZhbHVlIiwiZWRpdFByb2ZpbGVCdXR0b24iLCJhZGRDYXJkQnV0dG9uIiwiYXZhdGFySWNvbiIsImNvbnN0cnVjdG9yIiwiZm9ybUVsZW1lbnQiLCJ0aGlzIiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIl9mb3JtIiwiX2lucHV0RWxlbWVudHMiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX3N1Ym1pdEJ1dHRvbiIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWxlbWVudCIsImVycm9yRWxlbWVudCIsImlkIiwiY2xhc3NMaXN0IiwiYWRkIiwidGV4dENvbnRlbnQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oaWRlSW5wdXRFcnJvciIsInJlbW92ZSIsIl90b2dnbGVJbnB1dEVycm9yIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJldmVyeSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImlucHV0RWxlbWVudHMiLCJkaXNhYmxlZCIsIl9zZXRFdmVudExpc3RlbmVycyIsImZvckVhY2giLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwiZW5hYmxlVmFsaWRhdGlvbiIsInByZXZlbnREZWZhdWx0IiwicmVzZXRWYWxpZGF0aW9uIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsImFkZE5ld0l0ZW0iLCJhcHBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJrZXkiLCJjbG9zZU1vZGFsIiwiX3BvcHVwRWxlbWVudCIsIl9jbG9zZUJ1dHRvbkVsZW1lbnQiLCJvcGVuTW9kYWwiLCJfaGFuZGxlQ2xvc2VPbkVzY2FwZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlQ2xvc2VPbkNsaWNrIiwidGFyZ2V0Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfbW9kYWxGb3JtIiwiX2lucHV0TGlzdCIsIl9zdWJtaXRCdXR0b25UZXh0IiwiX2dldElucHV0VmFsdWVzIiwiZm9ybURhdGEiLCJpbnB1dCIsIm5hbWUiLCJ2YWx1ZSIsInJlc2V0IiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsImxvYWRpbmdUZXh0IiwiaW5wdXRWYWx1ZXMiLCJhcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsInVybCIsIl9oYW5kbGVTZXJ2ZXJSZXNwb25zZSIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJnZXRBcHBJbmZvIiwiYWxsIiwiZ2V0SW5pdGlhbENhcmRzIiwiZ2V0VXNlckRhdGEiLCJmZXRjaCIsInRoZW4iLCJhZGROZXdDYXJkIiwidGl0bGUiLCJsaW5rIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJkZWxldGVDYXJkIiwidG9nZ2xlTGlrZVN0YXR1cyIsImlzTGlrZWQiLCJzdWJtaXRVc2VyRWRpdCIsImRhdGEiLCJhYm91dCIsInNldEF2YXRhciIsImF2YXRhciIsImF1dGhvcml6YXRpb24iLCJ1c2VySWQiLCJjYXJkU2VjdGlvbiIsInVzZXJJbmZvIiwidXNlck5hbWVTZWxlY3RvciIsInVzZXJBYm91dFNlbGVjdG9yIiwidXNlckF2YXRhclNlbGVjdG9yIiwiX3VzZXJOYW1lRWxlbWVudCIsIl91c2VyQWJvdXRFbGVtZW50IiwiX3VzZXJBdmF0YXJFbGVtZW50IiwiZ2V0VXNlckluZm8iLCJzcmMiLCJzZXRVc2VySW5mbyIsInVzZXJOYW1lIiwidXNlckFib3V0IiwidXNlckF2YXRhciIsImNyZWF0ZUNhcmQiLCJjYXJkIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlSW1hZ2VDbGljayIsImhhbmRsZUxpa2VDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwiX2lkIiwiX2RhdGEiLCJfdGl0bGUiLCJfbGluayIsIl91c2VySWQiLCJfb3duZXJJZCIsIm93bmVyIiwiX2xpa2VzIiwibGlrZXMiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfaGFuZGxlTGlrZUNsaWNrIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiX2dldFRlbXBsYXRlIiwiY29udGVudCIsImNsb25lTm9kZSIsImdldFZpZXciLCJfZWxlbWVudCIsIl9jYXB0aW9uRWxlbWVudCIsIl9jYXJkTGlrZUJ1dHRvbiIsIl9jYXJkRGVsZXRlQnV0dG9uIiwiX2NhcmRJbWFnZSIsIl9jYXJkTGlrZXNDb3VudGVyIiwiYWx0IiwiX3JlbmRlckxpa2VzIiwiaGFuZGxlRGVsZXRlQ2FyZCIsIm51bGwiLCJzZXRMaWtlcyIsInNvbWUiLCJsaWtlIiwibGVuZ3RoIiwiaW1nRGF0YSIsImNhcmRQcmV2aWV3UG9wdXAiLCJnZXRDYXJkSWQiLCJkZWxldGVQb3B1cCIsInNldFN1Ym1pdEFjdGlvbiIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImZpbmFsbHkiLCJjYXJkc0FycmF5IiwidXNlckRhdGEiLCJhZGRDYXJkUG9wdXAiLCJhdmF0YXJNb2RhbCIsInVzZXIiLCJlZGl0UHJvZmlsZVBvcHVwIiwidXBkYXRlVXNlciIsImFjdGlvbiIsIl9oYW5kbGVTdWJtaXRDYWxsYmFjayIsIl9jYXJkQ2FwdGlvbiIsImZpbGxQcm9maWxlRm9ybSIsImFkZEZvcm1WYWxpZGF0b3IiLCJhdmF0YXJWYWxpZGF0b3IiLCJGb3JtVmFsaWRhdG9yIiwiZWRpdEZvcm1WYWxpZGF0b3IiXSwic291cmNlUm9vdCI6IiJ9