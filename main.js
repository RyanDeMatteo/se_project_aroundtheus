!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(document.querySelector(".profile__title"),document.querySelector(".profile__subtitle"),document.querySelector(".modal__input_type_name")),s=document.querySelector(".modal__input_type_about"),r=document.querySelector(".profile__edit-button"),n=document.querySelector(".profile__add-button");document.querySelector(".modal__close-button"),document.querySelector("#card-template"),document.querySelector("#add-card-form");var o=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleInputError(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this.inputElements)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._toggleButtonState(this._inputElements,this._submitButton,e),this._inputElements.forEach((t=>{t.addEventListener("input",(s=>{this._toggleInputError(t),this._toggleButtonState(this._inputElements,this._submitButton,e)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this._form,e)}resetValidation(){this._toggleButtonState()}};function i(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class l{constructor(e){var t,s,r;t=this,r=e=>{"Escape"===e.key&&this.closeModal()},(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(s="_handleCloseOnEscape"))in t?Object.defineProperty(t,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[s]=r,this._popupElement=document.querySelector(e),this._closeButtonElement=this._popupElement.querySelector(".modal__close-button")}openModal(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleCloseOnEscape)}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleCloseOnEscape)}_handleCloseOnClick(e){e.target===this._popupElement&&this.closeModal()}setEventListeners(){this._closeButtonElement.addEventListener("click",(()=>this.closeModal())),this._popupElement.addEventListener("mousedown",(e=>this._handleCloseOnClick(e)))}}class a extends l{constructor(e,t){super(e),this._handleFormSubmit=t,this._modalForm=this._popupElement.querySelector(".modal__form"),this._inputList=Array.from(this._modalForm.querySelectorAll(".modal__input"))}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}closeModal(){console.log(this._modalForm),this._modalForm.reset(),super.closeModal()}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault;const t=this._getInputValues();this._handleFormSubmit(t)}))}}function u(e){const t=d(e);_.addItem(t)}document.getElementById("profile-image").src="bbe7c5b6093ec0273de1.jpg";const c=new class{constructor(e,t){this._userNameElement=document.querySelector(e),this._userAboutElement=document.querySelector(t)}getUserInfo(){return{name:this._userNameElement.textContent,about:this._userAboutElement.textContent}}setUserInfo(e){let{userName:t,userAbout:s}=e;this._userNameElement.textContent=t,this._userAboutElement.textContent=s}}(".profile__title",".profile__subtitle"),d=e=>new class{constructor(e,t){let{data:s,handleImageClick:r}=e;i(this,"_handleLikeIcon",(()=>{this._cardLikeButton.classList.toggle("card__like-button_active")})),i(this,"_handleDeleteCard",(()=>{this._element.remove(),this._element=null})),this._data=s,this._title=s.title,this._link=s.link,this._handleImageClick=r,this._cardSelector=t}_getTemplate(){return document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0)}getView(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__caption");return this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardDeleteButton=this._element.querySelector(".card__delete-icon"),this._cardImageButton=this._element.querySelector(".card__image"),e.src=this._link,e.alt=this._title,t.textContent=this._title,this._setEventListeners(),this._element}_setEventListeners(){this._cardLikeButton.addEventListener("click",this._handleLikeIcon),this._cardDeleteButton.addEventListener("click",this._handleDeleteCard),this._cardImageButton.addEventListener("click",(()=>this._handleImageClick(this._data)))}}({data:e,handleImageClick:e=>{m.openModal(e)}},".card-template").getView(),_=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}addNewItem(e){this._container.append(e)}}({items:[{title:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"},{title:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{title:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{title:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{title:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{title:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"}],renderer:e=>{u(e)}},"#cards-list");_.renderItems();const m=new class extends l{constructor(e){super(e),this._cardImage=this._popupElement.querySelector(".modal__image"),this._cardCaption=this._popupElement.querySelector(".modal__caption")}openModal(e){let{title:t,link:s}=e;this._cardImage.src=s,this._cardImage.alt=t,this._cardCaption.textContent=t,super.openModal()}}("#image-modal"),h=new a("#add-card-modal",(e=>{u({title:e.title,link:e.link}),h.closeModal()})),p=new a("#edit-profile-modal",(e=>{c.setUserInfo({userName:e.name,userAbout:e.about}),p.closeModal()}));m.setEventListeners(),h.setEventListeners(),n.addEventListener("click",(()=>{h.openModal(),v.resetValidation()})),p.setEventListeners(),r.addEventListener("click",(()=>{!function(){const{name:e,about:r}=c.getUserInfo();t.value=e,s.value=r}(),p.openModal()}));const v=new o(e,document.querySelector("#add-card-form"));new o(e,document.querySelector("#edit-profile-form")).enableValidation(),v.enableValidation(),new class{constructor(e){let{baseUrl:t,headers:s}=e;this.url=t,this.headers=s}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getInitialCards(){return fetch("https:/around.nomoreparties.co/v1/group-42/cards",{headers:this.headers}).then(this._handleServerResponse)}}({baseUrl:"https://nomoreparties.com/v1/group-42",headers:{authorization:"fa002eaa-cfdc-49b2-ba7a-7640eb468742","Content-Type":"application/json"}})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,