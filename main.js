!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=document.querySelector(".profile"),s=(document.querySelector(".profile__title"),document.querySelector(".profile__subtitle"),document.querySelector(".modal__input_type_name")),r=document.querySelector(".modal__input_type_about"),n=(document.querySelector(".modal__input_type_avatar"),document.querySelector(".profile__edit-button")),i=document.querySelector(".profile__add-button"),o=(document.querySelector(".modal__close-button"),document.querySelector(".profile__avatar-edit")),a=(document.querySelector("#card-template"),document.querySelector("#add-card-form"));var l=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleInputError(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this.inputElements)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._toggleButtonState(this._inputElements,this._submitButton,e),this._inputElements.forEach((t=>{t.addEventListener("input",(s=>{this._toggleInputError(t),this._toggleButtonState(this._inputElements,this._submitButton,e)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this._form,e)}resetValidation(){this._toggleButtonState()}};class d{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}addNewItem(e){this._container.append(e)}}class u{constructor(e){var t,s,r;t=this,r=e=>{"Escape"===e.key&&this.closeModal()},(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(s="_handleCloseOnEscape"))in t?Object.defineProperty(t,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[s]=r,this._popupElement=document.querySelector(e),this._closeButtonElement=this._popupElement.querySelector(".modal__close-button")}openModal(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleCloseOnEscape)}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleCloseOnEscape)}_handleCloseOnClick(e){e.target===this._popupElement&&this.closeModal()}setEventListeners(){this._closeButtonElement.addEventListener("click",(()=>this.closeModal())),this._popupElement.addEventListener("mousedown",(e=>this._handleCloseOnClick(e)))}}class c extends u{constructor(e,t){super(e),this._handleFormSubmit=t,this._modalForm=this._popupElement.querySelector(".modal__form"),this._inputList=Array.from(this._modalForm.querySelectorAll(".modal__input")),this._saveButton=this._modalForm.querySelector(".modal__save-button")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}closeModal(){this._modalForm.reset(),super.closeModal()}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._saveButton.textContent=e?t:"Save"}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault,this.renderLoading(!0);const t=this._getInputValues();this._handleFormSubmit(t)}))}}const h=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.url=t,this.headers=s}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserData()])}getUserData(){return fetch(`${this.url}/users/me`,{headers:this.headers}).then(this._handleServerResponse)}getInitialCards(){return fetch(`${this.url}/cards`,{headers:this.headers}).then(this._handleServerResponse)}addNewCard(e){let{title:t,link:s}=e;return fetch(`${this.url}/cards`,{headers:this.headers,method:"POST",body:JSON.stringify({name:t,link:s})}).then(this._handleServerResponse)}deleteCard(e){return fetch(`${this.url}/cards/${e}`,{headers:this.headers,method:"DELETE"}).then(this._handleServerResponse)}toggleLikeStatus(e,t){return fetch(`${this.url}/cards/likes/${e}`,{headers:this.headers,method:t?"PUT":"DELETE"}).then(this._handleServerResponse)}submitUserEdit(e){return fetch(`${this.url}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleServerResponse)}setAvatar(e){let{avatar:t}=e;return fetch(`${this.url}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})}).then(this._handleServerResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"fa002eaa-cfdc-49b2-ba7a-7640eb468742","Content-Type":"application/json"}});let _=null,m=null;const p=new class{constructor(e,t,s){this._userNameElement=document.querySelector(e),this._userAboutElement=document.querySelector(t),this._userAvatarElement=document.querySelector(s)}getUserInfo(){return{name:this._userNameElement.textContent,about:this._userAboutElement.textContent,avatar:this._userAvatarElement.src}}setUserInfo(e){let{userName:t,userAbout:s}=e;this._userNameElement.textContent=t,this._userAboutElement.textContent=s}setAvatar(e){this._userAvatarElement.src=e}}(".profile__title",".profile__subtitle",".profile__image"),v=(e,s)=>{const r=new class{constructor(e,t){let{data:s,userId:r,handleImageClick:n,handleLikeClick:i,handleDeleteClick:o}=e;var a,l,d;a=this,d=()=>this._id,(l=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(l="getCardId"))in a?Object.defineProperty(a,l,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[l]=d,this._data=s,this._title=s.name,this._link=s.link,this._id=s._id,this._userId=r,this._ownerId=s.owner._id,this._likes=s.likes,this._cardSelector=t,this._handleImageClick=n,this._handleLikeClick=i,this._handleDeleteClick=o}_getTemplate(){return document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0)}getView(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__caption");return this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardDeleteButton=this._element.querySelector(".card__delete-icon"),this._cardImageButton=this._element.querySelector(".card__image"),this._cardLikesCounter=this._element.querySelector(".card__like-counter"),this._setEventListeners(),e.src=this._link,e.alt=this._title,t.textContent=this._title,this._renderLikes(),this._userId!==this._ownerId&&this._cardDeleteButton.remove(),this._element}handleDeleteCard(){this._element.remove(),this._element.null}setLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){this._cardLikesCounter.textContent=this._likes.length||"",this.isLiked()?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>this._handleLikeClick())),this._cardDeleteButton.addEventListener("click",(()=>this._handleDeleteClick())),this._cardImageButton.addEventListener("click",(()=>this._handleImageClick({title:this._title,link:this._link})))}}({data:e,userId:s,handleImageClick:e=>{f.openModal(e)},handleDeleteClick:()=>{const e=r.getCardId();g.openModal(),g.setSubmitAction((()=>{g.renderLoading(!0),h.deleteCard(e).then((()=>{r.handleDeleteCard(),g.closeModal()})).catch((e=>console.log(e))).finally((()=>{g.renderLoading(!1)}))}))},handleLikeClick:()=>{h.toggleLikeStatus(r.getCardId(),!r.isLiked()).then((e=>r.setLikes(e.likes))).catch((e=>console.log(e)))}},".card-template",t.id);return r.getView()};h.getAppInfo().then((e=>{let[t,s]=e;p.setUserInfo({userName:s.name,userAbout:s.about});const r=s.avatar;p.setAvatar(r),_=s._id,m=new d({items:t,renderer:e=>{const t=v(e,_);m.addNewItem(t)}},".cards__list"),m.renderItems()}));const E=new c("#add-card-modal",(e=>{E.renderLoading(!0),h.addNewCard(e).then((e=>{const t=v(e,e.owner_id);console.log(e),m.addItem(t),a.reset(),E.closeModal()})).finally((()=>{E.renderLoading(!1)}))})),b=new c("#avatar-modal",(e=>{b.renderLoading(!0),h.setAvatar(e).then((e=>{p.setAvatar(e.avatar),b.closeModal()})).catch((e=>console.log(e))).finally((()=>b.renderLoading(!1)))})),S=new c("#edit-profile-modal",(e=>{const t={name:e.name,about:e.about,avatar:e.avatar};h.submitUserEdit(t).then((e=>{p.setUserInfo({userName:e.name,userAbout:e.about}),S.closeModal()})).catch((e=>console.log(e))).finally((()=>{S.renderLoading(!1)}))})),g=new class extends u{constructor(e){super(e),this._form=this._popupElement.querySelector(".modal__form"),this._saveButton=this._form.querySelector(".modal__save-button")}setSubmitAction(e){this._handleSubmitCallback=e}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._saveButton.textContent=e?t:"Save"}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitCallback()}))}}("#delete-modal");g.setEventListeners();const f=new class extends u{constructor(e){super(e),this._cardImage=this._popupElement.querySelector(".modal__image"),this._cardCaption=this._popupElement.querySelector(".modal__caption")}openModal(e){let{title:t,link:s}=e;this._cardImage.src=s,this._cardImage.alt=t,this._cardCaption.textContent=t,super.openModal()}}("#image-modal");S.setEventListeners(),E.setEventListeners(),f.setEventListeners(),g.setEventListeners(),b.setEventListeners(),n.addEventListener("click",(()=>{!function(){const{name:e,about:t}=p.getUserInfo();s.value=e,r.value=t}(),S.openModal()})),i.addEventListener("click",(()=>{E.openModal(),y.resetValidation()})),o.addEventListener("click",(()=>{b.openModal(),k.resetValidation()}));const y=new l(e,document.querySelector("#add-card-form")),L=new l(e,document.querySelector("#edit-profile-form")),k=new l(e,document.querySelector("#avatar-form"));L.enableValidation(),y.enableValidation(),k.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,