!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=document.querySelector(".profile"),s=(document.querySelector(".profile__title"),document.querySelector(".profile__subtitle"),document.querySelector(".modal__input_type_name")),r=document.querySelector(".modal__input_type_about"),i=(document.querySelector(".modal__input_type_avatar"),document.querySelector(".profile__edit-button")),n=document.querySelector(".profile__add-button"),o=(document.querySelector(".modal__close-button"),document.querySelector(".profile__avatar-edit"));document.querySelector("#card-template"),document.querySelector("#add-card-form");var a=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleInputError(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this.inputElements)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._toggleInputError(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}};class l{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}addNewItem(e){this._container.append(e)}}class d{constructor(e){var t,s,r;t=this,r=e=>{"Escape"===e.key&&this.closeModal()},(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(s="_handleCloseOnEscape"))in t?Object.defineProperty(t,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[s]=r,this._popupElement=document.querySelector(e),this._closeButtonElement=this._popupElement.querySelector(".modal__close-button")}openModal(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleCloseOnEscape)}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleCloseOnEscape)}_handleCloseOnClick(e){e.target===this._popupElement&&this.closeModal()}setEventListeners(){this._closeButtonElement.addEventListener("click",(()=>this.closeModal())),this._popupElement.addEventListener("mousedown",(e=>this._handleCloseOnClick(e)))}}class u extends d{constructor(e,t){super(e),this._handleFormSubmit=t,this._modalForm=this._popupElement.querySelector(".modal__form"),this._inputList=Array.from(this._modalForm.querySelectorAll(".modal__input")),this._submitButton=this._modalForm.querySelector(".modal__save-button"),this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}closeModal(){this._modalForm.reset(),super.closeModal()}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this.renderLoading(!0);const t=this._getInputValues();this._handleFormSubmit(t)}))}}const c=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.url=t,this.headers=s}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserData()])}getUserData(){return fetch(`${this.url}/users/me`,{headers:this.headers}).then(this._handleServerResponse)}getInitialCards(){return fetch(`${this.url}/cards`,{headers:this.headers}).then(this._handleServerResponse)}addNewCard(e){let{title:t,link:s}=e;return fetch(`${this.url}/cards`,{headers:this.headers,method:"POST",body:JSON.stringify({name:t,link:s})}).then(this._handleServerResponse)}deleteCard(e){return fetch(`${this.url}/cards/${e}`,{headers:this.headers,method:"DELETE"}).then(this._handleServerResponse)}toggleLikeStatus(e,t){return fetch(`${this.url}/cards/likes/${e}`,{headers:this.headers,method:t?"PUT":"DELETE"}).then(this._handleServerResponse)}submitUserEdit(e){return fetch(`${this.url}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleServerResponse)}setAvatar(e){let{avatar:t}=e;return fetch(`${this.url}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})}).then(this._handleServerResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"fa002eaa-cfdc-49b2-ba7a-7640eb468742","Content-Type":"application/json"}});let h=null,_=null;const m=new class{constructor(e,t,s){this._userNameElement=document.querySelector(e),this._userAboutElement=document.querySelector(t),this._userAvatarElement=document.querySelector(s)}getUserInfo(){return{name:this._userNameElement.textContent,about:this._userAboutElement.textContent,avatar:this._userAvatarElement.src}}setUserInfo(e){let{userName:t,userAbout:s}=e;this._userNameElement.textContent=t,this._userAboutElement.textContent=s}setAvatar(e){this._userAvatarElement.src=e}}(".profile__title",".profile__subtitle",".profile__image"),p=(e,s)=>{const r=new class{constructor(e,t){let{data:s,userId:r,handleImageClick:i,handleLikeClick:n,handleDeleteClick:o}=e;var a,l,d;a=this,d=()=>this._id,(l=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(l="getCardId"))in a?Object.defineProperty(a,l,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[l]=d,this._data=s,this._title=s.name,this._link=s.link,this._id=s._id,this._userId=r,this._ownerId=s.owner._id,this._likes=s.likes,this._cardSelector=t,this._handleImageClick=i,this._handleLikeClick=n,this._handleDeleteClick=o}_getTemplate(){return document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._captionElement=this._element.querySelector(".card__caption"),this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardDeleteButton=this._element.querySelector(".card__delete-icon"),this._cardImage=this._element.querySelector(".card__image"),this._cardLikesCounter=this._element.querySelector(".card__like-counter"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._title,this._captionElement.textContent=this._title,this._renderLikes(),this._userId!==this._ownerId&&this._cardDeleteButton.remove(),this._element}handleDeleteCard(){this._element.remove(),this._element.null}setLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){this._cardLikesCounter.textContent=this._likes.length||"",this.isLiked()?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>this._handleLikeClick())),this._cardDeleteButton.addEventListener("click",(()=>this._handleDeleteClick())),this._cardImage.addEventListener("click",(()=>this._handleImageClick({title:this._title,link:this._link})))}}({data:e,userId:s,handleImageClick:e=>{f.openModal(e)},handleDeleteClick:()=>{const e=r.getCardId();g.openModal(),g.setSubmitAction((()=>{g.renderLoading(!0),c.deleteCard(e).then((()=>{r.handleDeleteCard(),g.closeModal()})).catch((e=>console.log(e))).finally((()=>{g.renderLoading(!1)}))}))},handleLikeClick:()=>{c.toggleLikeStatus(r.getCardId(),!r.isLiked()).then((e=>r.setLikes(e.likes))).catch((e=>console.log(e)))}},".card-template",t.id);return r.getView()};c.getAppInfo().then((e=>{let[t,s]=e;m.setUserInfo({userName:s.name,userAbout:s.about});const r=s.avatar;m.setAvatar(r),h=s._id,_=new l({items:t,renderer:e=>{const t=p(e,h);_.addNewItem(t)}},".cards__list"),_.renderItems()})).catch((e=>console.log(e)));const v=new u("#add-card-modal",(e=>{v.renderLoading(!0),c.addNewCard(e).then((e=>{const t=p(e,e.owner._id);_.addItem(t),v.closeModal()})).catch((e=>console.log(e))).finally((()=>{v.renderLoading(!1)}))})),b=new u("#avatar-modal",(e=>{b.renderLoading(!0),c.setAvatar(e).then((e=>{m.setAvatar(e.avatar),b.closeModal()})).catch((e=>console.log(e))).finally((()=>b.renderLoading(!1)))})),E=new u("#edit-profile-modal",(e=>{const t={name:e.name,about:e.about,avatar:e.avatar};c.submitUserEdit(t).then((e=>{m.setUserInfo({userName:e.name,userAbout:e.about}),E.closeModal()})).catch((e=>console.log(e))).finally((()=>{E.renderLoading(!1)}))})),g=new class extends d{constructor(e){super(e),this._form=this._popupElement.querySelector(".modal__form"),this._submitButton=this._form.querySelector(".modal__save-button"),this._submitButtonText=this._submitButton.textContent}setSubmitAction(e){this._handleSubmitCallback=e}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Deleting...";this._submitButton.textContent=e?t:this._submitButtonText}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitCallback()}))}}("#delete-modal");g.setEventListeners();const f=new class extends d{constructor(e){super(e),this._cardImage=this._popupElement.querySelector(".modal__image"),this._cardCaption=this._popupElement.querySelector(".modal__caption")}openModal(e){let{title:t,link:s}=e;this._cardImage.src=s,this._cardImage.alt=t,this._cardCaption.textContent=t,super.openModal()}}("#image-modal");E.setEventListeners(),v.setEventListeners(),f.setEventListeners(),g.setEventListeners(),b.setEventListeners(),i.addEventListener("click",(()=>{!function(){const{name:e,about:t}=m.getUserInfo();s.value=e,r.value=t}(),E.openModal()})),n.addEventListener("click",(()=>{v.openModal(),S.resetValidation()})),o.addEventListener("click",(()=>{b.openModal(),L.resetValidation()}));const S=new a(e,document.querySelector("#add-card-form")),y=new a(e,document.querySelector("#edit-profile-form")),L=new a(e,document.querySelector("#avatar-form"));y.enableValidation(),S.enableValidation(),L.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNiZ0ksRUFBaUJySixpQkFBaUIsSUFHcEN2QyxFQUFXbUMsaUJBQWlCLFNBQVMsS0FDbkNpSixFQUFZeEgsWUFDWmlJLEVBQWdCdEosaUJBQWlCLElBR25DLE1BQU1xSixFQUFtQixJQUFJRSxFQUMzQjNNLEVBQ0FPLFNBQVNDLGNBQWMsbUJBRW5Cb00sRUFBb0IsSUFBSUQsRUFDNUIzTSxFQUNBTyxTQUFTQyxjQUFjLHVCQUVuQmtNLEVBQWtCLElBQUlDLEVBQzFCM00sRUFDQU8sU0FBU0MsY0FBYyxpQkFHekJvTSxFQUFrQjFKLG1CQUNsQnVKLEVBQWlCdkosbUJBQ2pCd0osRUFBZ0J4SixrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtU3VibWl0LmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fc2F2ZS1idXR0b25cIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19zYXZlLWJ1dHRvbl9kaXNhYmxlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RvcnMgPSB7XHJcbiAgY2FyZFNlY3Rpb246IFwiLmNhcmRzX19saXN0XCIsXHJcbiAgY2FyZFRlbXBsYXRlOiBcIi5jYXJkLXRlbXBsYXRlXCIsXHJcbiAgcHJldmlld1BvcHVwOiBcIiNpbWFnZS1tb2RhbFwiLFxyXG4gIGVkaXRQcm9maWxlTW9kYWw6IFwiI2VkaXQtcHJvZmlsZS1tb2RhbFwiLFxyXG4gIGVkaXRQcm9maWxlRm9ybTogXCIjZWRpdC1wcm9maWxlLWZvcm1cIixcclxuICBhZGRDYXJkTW9kYWw6IFwiI2FkZC1jYXJkLW1vZGFsXCIsXHJcbiAgdXNlck5hbWVTZWxlY3RvcjogXCIucHJvZmlsZV9fdGl0bGVcIixcclxuICB1c2VyQWJvdXRTZWxlY3RvcjogXCIucHJvZmlsZV9fc3VidGl0bGVcIixcclxuICB1c2VyQXZhdGFyU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2ltYWdlXCIsXHJcbiAgdXNlckF2YXRhck1vZGFsOiBcIiNhdmF0YXItbW9kYWxcIixcclxuICBpbWFnZU1vZGFsOiBcIiNpbWFnZS1tb2RhbFwiLFxyXG4gIGRlbGV0ZU1vZGFsOiBcIiNkZWxldGUtbW9kYWxcIixcclxuICBhdmF0YXJGb3JtOiBcIiNhdmF0YXItZm9ybVwiLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQWJvdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWVJbnB1dFZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5tb2RhbF9faW5wdXRfdHlwZV9uYW1lXCJcclxuKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBYm91dElucHV0VmFsdWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLm1vZGFsX19pbnB1dF90eXBlX2Fib3V0XCJcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBhdmF0YXJJbnB1dFZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5tb2RhbF9faW5wdXRfdHlwZV9hdmF0YXJcIlxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGVkaXRQcm9maWxlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBhZGRDYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgY2xvc2VNb2RhbEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlLWJ1dHRvblwiKTtcclxuZXhwb3J0IGNvbnN0IGF2YXRhckljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2F2YXRhci1lZGl0XCIpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZENhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10ZW1wbGF0ZVwiKTtcclxuZXhwb3J0IGNvbnN0IGFkZENhcmRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1mb3JtXCIpO1xyXG4iLCJpbXBvcnQgeyBjb25maWcgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcblxyXG5jbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XHJcblxyXG4gICAgdGhpcy5fZm9ybSA9IGZvcm1FbGVtZW50O1xyXG4gICAgdGhpcy5faW5wdXRFbGVtZW50cyA9IEFycmF5LmZyb20oXHJcbiAgICAgIHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKVxyXG4gICAgKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF90b2dnbGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuICF0aGlzLl9pbnB1dEVsZW1lbnRzLmV2ZXJ5KFxyXG4gICAgICAoaW5wdXRFbGVtZW50KSA9PiBpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWRcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuaW5wdXRFbGVtZW50cykpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cclxuICAgIHRoaXMuX2lucHV0RWxlbWVudHMuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcblxyXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcblxyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCh0aGlzLl9yZW5kZXJlcik7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgYWRkTmV3SXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2Nsb3NlQnV0dG9uRWxlbWVudCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5tb2RhbF9fY2xvc2UtYnV0dG9uXCJcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBvcGVuTW9kYWwoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUNsb3NlT25Fc2NhcGUpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2VNb2RhbCgpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlQ2xvc2VPbkVzY2FwZSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlQ2xvc2VPbkVzY2FwZSA9IChldnQpID0+IHtcclxuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgIHRoaXMuY2xvc2VNb2RhbCgpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIF9oYW5kbGVDbG9zZU9uQ2xpY2soZXZ0KSB7XHJcbiAgICBpZiAoZXZ0LnRhcmdldCA9PT0gdGhpcy5fcG9wdXBFbGVtZW50KSB7XHJcbiAgICAgIHRoaXMuY2xvc2VNb2RhbCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuY2xvc2VNb2RhbCgpKTtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChldnQpID0+XHJcbiAgICAgIHRoaXMuX2hhbmRsZUNsb3NlT25DbGljayhldnQpXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgIHRoaXMuX21vZGFsRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgdGhpcy5fbW9kYWxGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpXHJcbiAgICApO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fbW9kYWxGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3NhdmUtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uVGV4dCA9IHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudDtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIGNvbnN0IGZvcm1EYXRhID0ge307XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgZm9ybURhdGFbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGZvcm1EYXRhO1xyXG4gIH1cclxuXHJcbiAgY2xvc2VNb2RhbCgpIHtcclxuICAgIHRoaXMuX21vZGFsRm9ybS5yZXNldCgpO1xyXG4gICAgc3VwZXIuY2xvc2VNb2RhbCgpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcsIGxvYWRpbmdUZXh0ID0gXCJTYXZpbmcuLi5cIikge1xyXG4gICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBsb2FkaW5nVGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX3N1Ym1pdEJ1dHRvblRleHQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9tb2RhbEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcblxyXG4gICAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHRoaXMuX2dldElucHV0VmFsdWVzKCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtU3VibWl0IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm1TdWJtaXQuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcblxyXG5pbXBvcnQge1xyXG4gIGNvbmZpZyxcclxuICBzZWxlY3RvcnMsXHJcbiAgcHJvZmlsZSxcclxuICBwcm9maWxlTmFtZUlucHV0VmFsdWUsXHJcbiAgcHJvZmlsZUFib3V0SW5wdXRWYWx1ZSxcclxuICBhZGRDYXJkQnV0dG9uLFxyXG4gIGVkaXRQcm9maWxlQnV0dG9uLFxyXG4gIGFkZENhcmRGb3JtLFxyXG4gIGF2YXRhckljb24sXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCJmYTAwMmVhYS1jZmRjLTQ5YjItYmE3YS03NjQwZWI0Njg3NDJcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxubGV0IHVzZXJJZCA9IG51bGw7XHJcbmxldCBjYXJkU2VjdGlvbiA9IG51bGw7XHJcblxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhcclxuICBzZWxlY3RvcnMudXNlck5hbWVTZWxlY3RvcixcclxuICBzZWxlY3RvcnMudXNlckFib3V0U2VsZWN0b3IsXHJcbiAgc2VsZWN0b3JzLnVzZXJBdmF0YXJTZWxlY3RvclxyXG4pO1xyXG5cclxuY29uc3QgY3JlYXRlQ2FyZCA9IChkYXRhLCB1c2VySWQpID0+IHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbiAgICB7XHJcbiAgICAgIGRhdGE6IGRhdGEsXHJcbiAgICAgIHVzZXJJZDogdXNlcklkLFxyXG4gICAgICBoYW5kbGVJbWFnZUNsaWNrOiAoaW1nRGF0YSkgPT4ge1xyXG4gICAgICAgIGNhcmRQcmV2aWV3UG9wdXAub3Blbk1vZGFsKGltZ0RhdGEpO1xyXG4gICAgICB9LFxyXG4gICAgICBoYW5kbGVEZWxldGVDbGljazogKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGlkID0gY2FyZC5nZXRDYXJkSWQoKTtcclxuICAgICAgICBkZWxldGVQb3B1cC5vcGVuTW9kYWwoKTtcclxuICAgICAgICBkZWxldGVQb3B1cC5zZXRTdWJtaXRBY3Rpb24oKCkgPT4ge1xyXG4gICAgICAgICAgZGVsZXRlUG9wdXAucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICAgICAgICAgIGFwaVxyXG4gICAgICAgICAgICAuZGVsZXRlQ2FyZChpZClcclxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGNhcmQuaGFuZGxlRGVsZXRlQ2FyZCgpO1xyXG4gICAgICAgICAgICAgIGRlbGV0ZVBvcHVwLmNsb3NlTW9kYWwoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXHJcbiAgICAgICAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICAgICAgICBkZWxldGVQb3B1cC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGhhbmRsZUxpa2VDbGljazogKCkgPT4ge1xyXG4gICAgICAgIGFwaVxyXG4gICAgICAgICAgLnRvZ2dsZUxpa2VTdGF0dXMoY2FyZC5nZXRDYXJkSWQoKSwgIWNhcmQuaXNMaWtlZCgpKVxyXG4gICAgICAgICAgLnRoZW4oKHJlcykgPT4gY2FyZC5zZXRMaWtlcyhyZXMubGlrZXMpKVxyXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHNlbGVjdG9ycy5jYXJkVGVtcGxhdGUsXHJcbiAgICBwcm9maWxlLmlkXHJcbiAgKTtcclxuICByZXR1cm4gY2FyZC5nZXRWaWV3KCk7XHJcbn07XHJcblxyXG5mdW5jdGlvbiBmaWxsUHJvZmlsZUZvcm0oKSB7XHJcbiAgY29uc3QgeyBuYW1lLCBhYm91dCB9ID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuICBwcm9maWxlTmFtZUlucHV0VmFsdWUudmFsdWUgPSBuYW1lO1xyXG4gIHByb2ZpbGVBYm91dElucHV0VmFsdWUudmFsdWUgPSBhYm91dDtcclxufVxyXG5cclxuYXBpXHJcbiAgLmdldEFwcEluZm8oKVxyXG4gIC50aGVuKChbY2FyZHNBcnJheSwgdXNlckRhdGFdKSA9PiB7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XHJcbiAgICAgIHVzZXJOYW1lOiB1c2VyRGF0YS5uYW1lLFxyXG4gICAgICB1c2VyQWJvdXQ6IHVzZXJEYXRhLmFib3V0LFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgdXNlckF2YXRhciA9IHVzZXJEYXRhLmF2YXRhcjtcclxuICAgIHVzZXJJbmZvLnNldEF2YXRhcih1c2VyQXZhdGFyKTtcclxuXHJcbiAgICB1c2VySWQgPSB1c2VyRGF0YS5faWQ7XHJcbiAgICBjYXJkU2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gICAgICB7XHJcbiAgICAgICAgaXRlbXM6IGNhcmRzQXJyYXksXHJcbiAgICAgICAgcmVuZGVyZXI6IChkYXRhKSA9PiB7XHJcbiAgICAgICAgICBjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChkYXRhLCB1c2VySWQpO1xyXG4gICAgICAgICAgY2FyZFNlY3Rpb24uYWRkTmV3SXRlbShjYXJkKTtcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgICBzZWxlY3RvcnMuY2FyZFNlY3Rpb25cclxuICAgICk7XHJcbiAgICBjYXJkU2VjdGlvbi5yZW5kZXJJdGVtcygpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG5cclxuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oc2VsZWN0b3JzLmFkZENhcmRNb2RhbCwgKGRhdGEpID0+IHtcclxuICBhZGRDYXJkUG9wdXAucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICBkZWJ1Z2dlcjtcclxuICBhcGlcclxuICAgIC5hZGROZXdDYXJkKGRhdGEpXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICBjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChkYXRhLCBkYXRhLm93bmVyLl9pZCk7XHJcbiAgICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZCk7XHJcbiAgICAgIGFkZENhcmRQb3B1cC5jbG9zZU1vZGFsKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGFkZENhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmNvbnN0IGF2YXRhck1vZGFsID0gbmV3IFBvcHVwV2l0aEZvcm0oc2VsZWN0b3JzLnVzZXJBdmF0YXJNb2RhbCwgKGF2YXRhcikgPT4ge1xyXG4gIGF2YXRhck1vZGFsLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpXHJcbiAgICAuc2V0QXZhdGFyKGF2YXRhcilcclxuICAgIC50aGVuKCh1c2VyKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldEF2YXRhcih1c2VyLmF2YXRhcik7XHJcbiAgICAgIGF2YXRhck1vZGFsLmNsb3NlTW9kYWwoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICAgIC5maW5hbGx5KCgpID0+IGF2YXRhck1vZGFsLnJlbmRlckxvYWRpbmcoZmFsc2UpKTtcclxufSk7XHJcblxyXG5jb25zdCBlZGl0UHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgc2VsZWN0b3JzLmVkaXRQcm9maWxlTW9kYWwsXHJcbiAgKGRhdGEpID0+IHtcclxuICAgIGNvbnN0IHVwZGF0ZVVzZXIgPSB7XHJcbiAgICAgIG5hbWU6IGRhdGEubmFtZSxcclxuICAgICAgYWJvdXQ6IGRhdGEuYWJvdXQsXHJcbiAgICAgIGF2YXRhcjogZGF0YS5hdmF0YXIsXHJcbiAgICB9O1xyXG4gICAgYXBpXHJcbiAgICAgIC5zdWJtaXRVc2VyRWRpdCh1cGRhdGVVc2VyKVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oeyB1c2VyTmFtZTogcmVzLm5hbWUsIHVzZXJBYm91dDogcmVzLmFib3V0IH0pO1xyXG4gICAgICAgIGVkaXRQcm9maWxlUG9wdXAuY2xvc2VNb2RhbCgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIGVkaXRQcm9maWxlUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuKTtcclxuXHJcbmNvbnN0IGRlbGV0ZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm1TdWJtaXQoc2VsZWN0b3JzLmRlbGV0ZU1vZGFsKTtcclxuZGVsZXRlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGNhcmRQcmV2aWV3UG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoc2VsZWN0b3JzLmltYWdlTW9kYWwpO1xyXG5cclxuZWRpdFByb2ZpbGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5hZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuY2FyZFByZXZpZXdQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5kZWxldGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5hdmF0YXJNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuZWRpdFByb2ZpbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBmaWxsUHJvZmlsZUZvcm0oKTtcclxuICBlZGl0UHJvZmlsZVBvcHVwLm9wZW5Nb2RhbCgpO1xyXG59KTtcclxuXHJcbmFkZENhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBhZGRDYXJkUG9wdXAub3Blbk1vZGFsKCk7XHJcbiAgYWRkRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcblxyXG5hdmF0YXJJY29uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgYXZhdGFyTW9kYWwub3Blbk1vZGFsKCk7XHJcbiAgYXZhdGFyVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG59KTtcclxuXHJcbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICBjb25maWcsXHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1mb3JtXCIpXHJcbik7XHJcbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgY29uZmlnLFxyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC1wcm9maWxlLWZvcm1cIilcclxuKTtcclxuY29uc3QgYXZhdGFyVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgY29uZmlnLFxyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLWZvcm1cIilcclxuKTtcclxuXHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuYWRkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmF2YXRhclZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcclxuICAgIHRoaXMudXJsID0gYmFzZVVybDtcclxuICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlU2VydmVyUmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvciAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgfVxyXG5cclxuICBnZXRBcHBJbmZvKCkge1xyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldEluaXRpYWxDYXJkcygpLCB0aGlzLmdldFVzZXJEYXRhKCldKTtcclxuICB9XHJcblxyXG4gIGdldFVzZXJEYXRhKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVTZXJ2ZXJSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9L2NhcmRzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGFkZE5ld0NhcmQoeyB0aXRsZSwgbGluayB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9L2NhcmRzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZTogdGl0bGUsIGxpbmsgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVNlcnZlclJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmQoaWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vY2FyZHMvJHtpZH1gLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVTZXJ2ZXJSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICB0b2dnbGVMaWtlU3RhdHVzKGlkLCBpc0xpa2VkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9L2NhcmRzL2xpa2VzLyR7aWR9YCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogaXNMaWtlZCA/IFwiUFVUXCIgOiBcIkRFTEVURVwiLFxyXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVTZXJ2ZXJSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBzdWJtaXRVc2VyRWRpdChkYXRhKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICAgIGFib3V0OiBkYXRhLmFib3V0LFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlU2VydmVyUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgc2V0QXZhdGFyKHsgYXZhdGFyIH0pIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgYXZhdGFyLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlU2VydmVyUmVzcG9uc2UpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IodXNlck5hbWVTZWxlY3RvciwgdXNlckFib3V0U2VsZWN0b3IsIHVzZXJBdmF0YXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fdXNlck5hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyTmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3VzZXJBYm91dEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBYm91dFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3VzZXJBdmF0YXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyQXZhdGFyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLl91c2VyTmFtZUVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgIGFib3V0OiB0aGlzLl91c2VyQWJvdXRFbGVtZW50LnRleHRDb250ZW50LFxyXG4gICAgICBhdmF0YXI6IHRoaXMuX3VzZXJBdmF0YXJFbGVtZW50LnNyYyxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyh7IHVzZXJOYW1lLCB1c2VyQWJvdXQgfSkge1xyXG4gICAgdGhpcy5fdXNlck5hbWVFbGVtZW50LnRleHRDb250ZW50ID0gdXNlck5hbWU7XHJcbiAgICB0aGlzLl91c2VyQWJvdXRFbGVtZW50LnRleHRDb250ZW50ID0gdXNlckFib3V0O1xyXG4gIH1cclxuXHJcbiAgc2V0QXZhdGFyKHVzZXJBdmF0YXIpIHtcclxuICAgIHRoaXMuX3VzZXJBdmF0YXJFbGVtZW50LnNyYyA9IHVzZXJBdmF0YXI7XHJcbiAgfVxyXG59XHJcbiIsImNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgeyBkYXRhLCB1c2VySWQsIGhhbmRsZUltYWdlQ2xpY2ssIGhhbmRsZUxpa2VDbGljaywgaGFuZGxlRGVsZXRlQ2xpY2sgfSxcclxuICAgIGNhcmRTZWxlY3RvclxyXG4gICkge1xyXG4gICAgdGhpcy5fZGF0YSA9IGRhdGE7XHJcbiAgICB0aGlzLl90aXRsZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xyXG4gICAgdGhpcy5fb3duZXJJZCA9IGRhdGEub3duZXIuX2lkO1xyXG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xyXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q2FyZElkID0gKCkgPT4gdGhpcy5faWQ7XHJcblxyXG4gIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgIHJldHVybiBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpXHJcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VmlldygpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG5cclxuICAgIHRoaXMuX2NhcHRpb25FbGVtZW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2NhcHRpb25cIik7XHJcbiAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKTtcclxuICAgIHRoaXMuX2NhcmREZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWljb25cIik7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9jYXJkTGlrZXNDb3VudGVyID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtY291bnRlclwiKTtcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlLmFsdCA9IHRoaXMuX3RpdGxlO1xyXG4gICAgdGhpcy5fY2FwdGlvbkVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLl90aXRsZTtcclxuXHJcbiAgICB0aGlzLl9yZW5kZXJMaWtlcygpO1xyXG5cclxuICAgIGlmICh0aGlzLl91c2VySWQgIT09IHRoaXMuX293bmVySWQpIHtcclxuICAgICAgdGhpcy5fY2FyZERlbGV0ZUJ1dHRvbi5yZW1vdmUoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICB9XHJcblxyXG4gIGhhbmRsZURlbGV0ZUNhcmQoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fZWxlbWVudC5udWxsO1xyXG4gIH1cclxuXHJcbiAgc2V0TGlrZXMobGlrZXMpIHtcclxuICAgIHRoaXMuX2xpa2VzID0gbGlrZXM7XHJcbiAgICB0aGlzLl9yZW5kZXJMaWtlcygpO1xyXG4gIH1cclxuXHJcbiAgaXNMaWtlZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9saWtlcy5zb21lKChsaWtlKSA9PiBsaWtlLl9pZCA9PT0gdGhpcy5fdXNlcklkKTtcclxuICB9XHJcblxyXG4gIF9yZW5kZXJMaWtlcygpIHtcclxuICAgIHRoaXMuX2NhcmRMaWtlc0NvdW50ZXIudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGggfHwgXCJcIjtcclxuICAgIGlmICh0aGlzLmlzTGlrZWQoKSkge1xyXG4gICAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fY2FyZExpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxyXG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2soKVxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLl9jYXJkRGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljaygpXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cclxuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh7IHRpdGxlOiB0aGlzLl90aXRsZSwgbGluazogdGhpcy5fbGluayB9KVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmQ7XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybVN1Ym1pdCBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fc2F2ZS1idXR0b25cIik7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25UZXh0ID0gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xyXG4gIH1cclxuICBzZXRTdWJtaXRBY3Rpb24oYWN0aW9uKSB7XHJcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXRDYWxsYmFjayA9IGFjdGlvbjtcclxuICB9XHJcblxyXG4gIHJlbmRlckxvYWRpbmcoaXNMb2FkaW5nLCBsb2FkaW5nVGV4dCA9IFwiRGVsZXRpbmcuLi5cIikge1xyXG4gICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBsb2FkaW5nVGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX3N1Ym1pdEJ1dHRvblRleHQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVTdWJtaXRDYWxsYmFjaygpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9jYXJkQ2FwdGlvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jYXB0aW9uXCIpO1xyXG4gIH1cclxuXHJcbiAgb3Blbk1vZGFsKHsgdGl0bGUsIGxpbmsgfSkge1xyXG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGl0bGU7XHJcbiAgICB0aGlzLl9jYXJkQ2FwdGlvbi50ZXh0Q29udGVudCA9IHRpdGxlO1xyXG5cclxuICAgIHN1cGVyLm9wZW5Nb2RhbCgpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiY29uZmlnIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJwcm9maWxlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicHJvZmlsZU5hbWVJbnB1dFZhbHVlIiwicHJvZmlsZUFib3V0SW5wdXRWYWx1ZSIsImVkaXRQcm9maWxlQnV0dG9uIiwiYWRkQ2FyZEJ1dHRvbiIsImF2YXRhckljb24iLCJjb25zdHJ1Y3RvciIsImZvcm1FbGVtZW50IiwidGhpcyIsIl9pbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJfZm9ybSIsIl9pbnB1dEVsZW1lbnRzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdXR0b24iLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsZW1lbnQiLCJlcnJvckVsZW1lbnQiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJyZW1vdmUiLCJfdG9nZ2xlSW5wdXRFcnJvciIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGFzSW52YWxpZElucHV0IiwiZXZlcnkiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJpbnB1dEVsZW1lbnRzIiwiZGlzYWJsZWQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJmb3JFYWNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2dCIsImVuYWJsZVZhbGlkYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0VmFsaWRhdGlvbiIsIl9pbnB1dExpc3QiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiYWRkSXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiYWRkTmV3SXRlbSIsImFwcGVuZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImtleSIsImNsb3NlTW9kYWwiLCJfcG9wdXBFbGVtZW50IiwiX2Nsb3NlQnV0dG9uRWxlbWVudCIsIm9wZW5Nb2RhbCIsIl9oYW5kbGVDbG9zZU9uRXNjYXBlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVDbG9zZU9uQ2xpY2siLCJ0YXJnZXQiLCJzZXRFdmVudExpc3RlbmVycyIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9tb2RhbEZvcm0iLCJfc3VibWl0QnV0dG9uVGV4dCIsIl9nZXRJbnB1dFZhbHVlcyIsImZvcm1EYXRhIiwiaW5wdXQiLCJuYW1lIiwidmFsdWUiLCJyZXNldCIsInJlbmRlckxvYWRpbmciLCJpc0xvYWRpbmciLCJsb2FkaW5nVGV4dCIsImlucHV0VmFsdWVzIiwiYXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJ1cmwiLCJfaGFuZGxlU2VydmVyUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZ2V0QXBwSW5mbyIsImFsbCIsImdldEluaXRpYWxDYXJkcyIsImdldFVzZXJEYXRhIiwiZmV0Y2giLCJ0aGVuIiwiYWRkTmV3Q2FyZCIsInRpdGxlIiwibGluayIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZGVsZXRlQ2FyZCIsInRvZ2dsZUxpa2VTdGF0dXMiLCJpc0xpa2VkIiwic3VibWl0VXNlckVkaXQiLCJkYXRhIiwiYWJvdXQiLCJzZXRBdmF0YXIiLCJhdmF0YXIiLCJhdXRob3JpemF0aW9uIiwidXNlcklkIiwiY2FyZFNlY3Rpb24iLCJ1c2VySW5mbyIsInVzZXJOYW1lU2VsZWN0b3IiLCJ1c2VyQWJvdXRTZWxlY3RvciIsInVzZXJBdmF0YXJTZWxlY3RvciIsIl91c2VyTmFtZUVsZW1lbnQiLCJfdXNlckFib3V0RWxlbWVudCIsIl91c2VyQXZhdGFyRWxlbWVudCIsImdldFVzZXJJbmZvIiwic3JjIiwic2V0VXNlckluZm8iLCJ1c2VyTmFtZSIsInVzZXJBYm91dCIsInVzZXJBdmF0YXIiLCJjcmVhdGVDYXJkIiwiY2FyZCIsImNhcmRTZWxlY3RvciIsImhhbmRsZUltYWdlQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJoYW5kbGVEZWxldGVDbGljayIsIl9pZCIsIl9kYXRhIiwiX3RpdGxlIiwiX2xpbmsiLCJfdXNlcklkIiwiX293bmVySWQiLCJvd25lciIsIl9saWtlcyIsImxpa2VzIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9nZXRUZW1wbGF0ZSIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJnZXRWaWV3IiwiX2VsZW1lbnQiLCJfY2FwdGlvbkVsZW1lbnQiLCJfY2FyZExpa2VCdXR0b24iLCJfY2FyZERlbGV0ZUJ1dHRvbiIsIl9jYXJkSW1hZ2UiLCJfY2FyZExpa2VzQ291bnRlciIsImFsdCIsIl9yZW5kZXJMaWtlcyIsImhhbmRsZURlbGV0ZUNhcmQiLCJudWxsIiwic2V0TGlrZXMiLCJzb21lIiwibGlrZSIsImxlbmd0aCIsImltZ0RhdGEiLCJjYXJkUHJldmlld1BvcHVwIiwiZ2V0Q2FyZElkIiwiZGVsZXRlUG9wdXAiLCJzZXRTdWJtaXRBY3Rpb24iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJmaW5hbGx5IiwiY2FyZHNBcnJheSIsInVzZXJEYXRhIiwiYWRkQ2FyZFBvcHVwIiwiYXZhdGFyTW9kYWwiLCJ1c2VyIiwiZWRpdFByb2ZpbGVQb3B1cCIsInVwZGF0ZVVzZXIiLCJhY3Rpb24iLCJfaGFuZGxlU3VibWl0Q2FsbGJhY2siLCJfY2FyZENhcHRpb24iLCJmaWxsUHJvZmlsZUZvcm0iLCJhZGRGb3JtVmFsaWRhdG9yIiwiYXZhdGFyVmFsaWRhdG9yIiwiRm9ybVZhbGlkYXRvciIsImVkaXRGb3JtVmFsaWRhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==